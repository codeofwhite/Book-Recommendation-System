// Application Architecture and Deployment Diagram
digraph {
	rankdir=TB splines=ortho
	subgraph cluster_user {
		fillcolor=floralwhite label=User labelloc=t style=filled
		user [label=User fillcolor=gold shape=Mdiamond style=filled]
	}
	subgraph cluster_frontend {
		fillcolor=lightpink label="Frontend Service (Presentation Layer)" labelloc=b style=filled
		vue_app [label="Vue.js Application" fillcolor=salmon shape=component style=filled]
	}
	api_gateway -> user_service [label="Auth/Authorization"]
	api_gateway -> book_service [label="Book Query"]
	api_gateway -> recommend_service [label="Get Recommendations"]
	api_gateway -> data_ingestion_service [label="User Behavior Upload"]
	user_service -> redis_cache [label="Read/Write Cache"]
	book_service -> redis_cache [label="Read/Write Cache"]
	recommend_service -> redis_cache [label="Read Recommendation Results"]
	data_ingestion_service -> kafka [label="Write Behavior Logs"]
	subgraph cluster_backend {
		fillcolor=lightblue label="Backend Services (Business Logic Layer)" labelloc=b style=filled
		api_gateway [label="API Gateway
(Kubernetes Ingress/Load Balancer)" fillcolor=lightgreen shape=cds style=filled]
		user_service [label="User Service
(Python/FastAPI)" fillcolor=cornflowerblue shape=box style=filled]
		book_service [label="Book Service
(Python/FastAPI)" fillcolor=cornflowerblue shape=box style=filled]
		recommend_service [label="Recommendation Service
(Python/FastAPI)" fillcolor=cornflowerblue shape=box style=filled]
		data_ingestion_service [label="Data Ingestion Service
(Python/FastAPI)" fillcolor=cornflowerblue shape=box style=filled]
		redis_cache [label="Redis Cluster
(Cache)" fillcolor=lightgrey shape=cylinder style=filled]
		kafka [label="Kafka
(Message Queue)" fillcolor=lightgoldenrod shape=note style=filled]
	}
	user_service -> mysql_db [label="User Data"]
	book_service -> mysql_db [label="Book Data"]
	book_service -> es_cluster [label="Update Index"]
	recommend_service -> hbase_db [label="Read Real-time Features/Recommendations"]
	es_cluster -> mysql_db [label="Sync Data" dir=back]
	kafka -> pyspark_flink [label="Consume Behavior Logs"]
	pyspark_flink -> hbase_db [label="Write Processed Results"]
	pyspark_flink -> mysql_db [label="Read Raw Data"]
	subgraph cluster_data {
		fillcolor=lightgray label="Data Services (Data Layer)" labelloc=b style=filled
		mysql_db [label="MySQL Cluster
(Core Business Data)" fillcolor=lightblue shape=cylinder style=filled]
		hbase_db [label="HBase Cluster
(Big Data Storage)" fillcolor=lightblue shape=cylinder style=filled]
		es_cluster [label="Elasticsearch Cluster
(Full-Text Search)" fillcolor=lightblue shape=box style=filled]
		pyspark_flink [label="PyFlink / PySpark
(Data Processing/Model Training)" fillcolor=darkseagreen shape=box style=filled]
	}
	user -> vue_app [label=Access]
	vue_app -> api_gateway [label="Call API"]
}
